EGachine <http://egachine.berlios.de>
is an open source (GPL) ECMA Script (Javascript) game machine/engine 
based on jgachine <http://jgachine.berlios.de>
which was dropped in favour of egachine.[1]

--------------------------------------------------------------------------------
WARNING:
THIS SOFTWARE COMES WITHOUT ANY WARRANTY 
- PERHAPS IT DESTROYS YOUR COMPUTER
FOR DETAILS SEE COPYING

THIS IS WORK IN PROGRESS (ALPHA)
THE SERVER IS INSECURE !!
AND THE CLIENT PERHAPS, TOO
(see also TODO)

For now you should treat scripts like binaries and take care!
--------------------------------------------------------------------------------

QUICK-START

Input:
if you have a joystick, it acts like a gamepad
no joystick/gamepad => keyboard acts like a gamepad
Keyboard Controls:

Key			Function		Comments

ESC			quit
Alt+Enter		toggle fullscreen	(not supported on win32)
Ctrl+Z			iconify window		(not supported on win32?)

Keypad 1:
cursor keys _on the number block_

Keypad 2:
w,a,s,d

For best results make sure your video driver synchronizes page flips to
the vertical retrace.
(if you use linux and nvidia drivers:
export __GL_SYNC_TO_VBLANK=1
with version 1.0-5336 it seems to works well
older versions used a busy loop)

Windows:
All .bat files should do something.

To run a local 2-player pong game start:
pong.bat

To run a networked 2-player pong game:
first start
netpong.bat (this starts the server)
then
client.bat (this starts the client)

Linux users:
USAGE: egachine script

--------------------------------------------------------------------------------

FEATURES/GOALS:
- Run untrusted code in a secure manner:
  This is similar to Java applets or like browsers run javascript code.
  This means you only download the client once and games/apps
  may be shipped via network. Neither server nor client can access files
  from javascript code.
- network support:
  Writing multi-player network games/apps should be easy.
  The client may establish one connection to a server. The server may listen
  on one port and establish one connection (for example to a meta-server).
- audio support:
  Currently the audio API is very basic but simple:
  you can play music and samples. In the future there probably will be OpenAL
  bindings.
- beginner friendly:
  Get beginners started with game programing. For now there is no detailed
  documentation (any volunteers?) but the examples should get you started.
  Javascript is a nice language and you don't need to compile code. You only
  need egachine and a text editor to get started.
- optional OpenGL <http://www.opengl.org> support:
  for the advanced programmer or OpenGL teaching - OpenGL language bindings are
  included. The API is close to the C API. Instead of glBegin write gl.Begin
  and glGet(3x) functions return an array.
- quick development of games
  sometimes you just want to write a game within few hours
- portability
- not limited to games - could also be used as:
	presentation tool
	"movie" player similar to flash
	...

--------------------------------------------------------------------------------

HELP WANTED:
if you like EGachine please contact me/us. For now mail me directly:
karme@berlios.de

Could someone write a small GUI in Javascript?
(Menu, checkboxes, themable, suitable for games)

Perhaps a game generator frontend which produces suitable output for
egaserver/egachine ?

--------------------------------------------------------------------------------

Compilation from source:
currently no Makefile, no autoutils (no autoconf/make)
only a bash script (someone wants to make it a sh-script?)
I recommend to use ccache or compilercache.

Dependencies:
SDL
SDL_image
SDL_mixer
OpenGL/Mesa
c++ (f.e. gcc - probably version >=3)

For regenerating OpenGL wrappers (normally not needed):
perl,sed,grep,indent,bash,?

take a look at ./make - perhaps you have to edit something?

If you checked out from CVS you also need spidermonkey which is not in CVS
but in the source tarball.
--------------------------------------------------------------------------------
[1] why was jgachine dropped in favour of egachine?
- javascript is easier for beginners than Java
- no need to compile the code
- Java serialisation was too slow
- gcc / gcj / libgcj Java security is not yet ready

