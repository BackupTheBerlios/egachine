#!/bin/bash

# script which does what normally "make clean && make" does
# usage of ccache or compilercache is recommended
# supported environment variables (see also common.sh):
# CC, CXX, CXXFLAGS, PREFIX, BINDIR, DATADIR, DOCDIR, SYSCONFDIR

set -e

if test ! -f $(pwd)/src/egachine.js; then
	echo "You must type ./make in the top level directory"
	exit 1
fi

source ./common.sh

LDFLAGS="$LDFLAGS -L$SPIDERMONKEY_SRCDIR/$SM_BUILDDIR"
COMMONFLAGS="-I$TOPSRCDIR -I$SPIDERMONKEY_SRCDIR -I$SPIDERMONKEY_SRCDIR/$SM_BUILDDIR -I$SDLMIXER_SRCDIR -I. -I$SRCDIR -I$SRCDIR/common -DXP_UNIX $(sigc-config --cflags) -DSYSCONFDIR=$SYSCONFDIR -DDATADIR=$DATADIR"
CLIENTFLAGS="$(sdl-config --cflags)"
#SDLMIXERLIBS="-lSDL_mixer -lvorbisfile -lvorbis -logg -lsmpeg"
SDLMIXERLIBS="$SDLMIXER_SRCDIR/.libs/libSDL_mixer.a"
JSLIB="-lsmjs"

# build spidermonkey
cd $SPIDERMONKEY_SRCDIR
make -f Makefile.ref clean
rm -rf *.OBJ
make -f Makefile.ref SOVER=1.5 SOMAJOR=1 $BUILD_OPT

# build SDL_mixer
cd $SDLMIXER_SRCDIR
./configure --disable-music-ogg --disable-music-mp3 --disable-music-midi --disable-midi --disable-music-timidity-midi--disable-music-cmd --disable-shared
make clean
make

# build egachine
cd $SRCDIR
echo "make[0]: Entering directory \`$SRCDIR'"
rm -vf $(find -name "*.o" -o -name "*.so" -o -name "*.lo" -o -name "*.a")
for a in $PROGRAMS; do
    rm -vf $a $a.bin
done

for a in $(find . -name "*.cpp"); do 
    echo Compile $a
    if (echo $a|grep client >/dev/null); then
	FLAGS="$COMMONFLAGS $CLIENTFLAGS $CXXFLAGS"
    else
	FLAGS="$COMMONFLAGS $CXXFLAGS"
    fi
    run "$CXX -o ${a%*.cpp}.o $FLAGS -c $a"
done
# link client
echo Link egachine
run "$CXX -o egachine.bin $LDFLAGS $(find -name *.o|grep -v server|grep -v tools) $JSLIB $(sdl-config --libs) $(sigc-config --libs) -lGL -lGLU -lSDL_image $SDLMIXERLIBS"
# link server
echo Link egaserver
run "$CXX -o egaserver.bin $LDFLAGS $(find -name *.o|grep -v client|grep -v tools) $JSLIB $(sigc-config --libs) -lz"
# link egares
echo Link egares
run "$CXX -o egares.bin $LDFLAGS $(find -name *.o|grep -v client|grep -v server) $JSLIB -lz"

echo Generating wrapper scripts
for a in $PROGRAMS; do
cat > $a <<EOF
#!/bin/sh
LD_LIBRARY_PATH=$SPIDERMONKEY_SRCDIR/$SM_BUILDDIR 
export LD_LIBRARY_PATH
exec ./$a.bin \$*
EOF
chmod +x $a
done
